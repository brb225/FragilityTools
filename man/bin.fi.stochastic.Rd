% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/internal.R
\name{bin.fi.stochastic}
\alias{bin.fi.stochastic}
\title{Stochastic generalized fragility indices for 2x2 tables}
\usage{
bin.fi.stochastic(
  crosstab,
  get.p,
  can.vary = matrix(rep(TRUE, 4), nrow = 2),
  r = 0.5,
  nsim = 10,
  qfi.init = 10L,
  alpha = 0.05,
  verbose = FALSE,
  cl = NULL,
  D = 40,
  gamma = 0.2
)
}
\arguments{
\item{crosstab}{a 2x2 contingency table with interventions on rows and outcomes on columns}

\item{get.p}{a function that inputs a matrix and returns a p value}

\item{can.vary}{a 2x2 boolean matrix for whether each entry can decrease. See the
\link{incidence fragility index} article for explanation.}

\item{r}{the index of the stochastic fragility index, by default 0.5. Having r=0 is equivalent to the generalized fragility
index and having r=1 means that all patient combinations of the output size can reverse significance.}

\item{nsim}{The number of simulations in the root finding algorithm, by default 10}

\item{alpha}{a numeric for the significance cutoff}

\item{verbose}{a logical value for whether to print status updates while running}

\item{cl}{a cluster from the \code{parallel} package, used to compute fragility index over
each modified observation at each stage of the greedy algorithm}

\item{D}{a parameter of Polyak-Ruppert averaging, by default 40}

\item{gamma}{a parameter of Polyak-Ruppert averaging, by default .2}

\item{gfi.init}{An initialization of the output size, by default 10}
}
\value{
a length 2 list, with the first entry giving the stochastic generalized fragility index and the
last entry giving the history of the root finding algorithm.
}
\description{
Use bin.fi instead of this function.
This is an internal function which calculates stochastic generalized fragility indices for 2x2 tables
in a more optimized way than stochastic.fi.
}
\examples{
x <- matrix(nrow = 2, byrow = TRUE, rgeom(4, 1 / 50))
colnames(x) <- c("event", "nonevent")
rownames(x) <- c("control", "treatment")
get.p <- function(tab) fisher.test(tab)$p.value
FragilityTools:::bin.fi.stochastic(x, get.p)

}
