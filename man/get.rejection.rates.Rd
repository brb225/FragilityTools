% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/front.R
\name{get.rejection.rates}
\alias{get.rejection.rates}
\title{Get rejection rates of the two main tests}
\usage{
get.rejection.rates(
  get.p.val,
  get.replacements = NULL,
  get.sample.null = NULL,
  get.sample.alt = NULL,
  phi,
  n,
  alpha = 0.05,
  algorithm = "greedy",
  cl = NULL,
  nsim = 1000
)
}
\arguments{
\item{get.p.val}{a}

\item{get.replacements}{a}

\item{get.sample.null}{a set to NULL to skip null calculations}

\item{get.sample.alt}{a set to NULL to skip alternative calculations}

\item{phi}{a}

\item{n}{a}

\item{alpha}{a}

\item{algorithm}{a}
}
\value{
a length 4 vector with the size and power of both tests.
}
\description{
Get rejection rates of the two main tests
}
\examples{
get.p.val <- function(mat) {
  pearson.test.stata <- function(mat) {
    n1 <- sum(mat[1, ])
    n2 <- sum(mat[2, ])
    p1 <- mat[1, 1] / n1
    p2 <- mat[2, 1] / n2

    pbar <- (n1 * p1 + n2 * p2) / (n1 + n2)
    ts <- (p1 - p2) / sqrt(pbar * (1 - pbar) * (1 / n1 + 1 / n2))
    p_value <- 2 * pnorm(abs(ts), lower.tail = FALSE)
    return(ifelse(is.nan(p_value), 1, p_value))
  }
  suppressWarnings(p <- pearson.test.stata(mat))

  return(ifelse(is.na(p), 1, p))
}

get.sample.null <- function(ss) draw.binom(ss, theta1 = .14, theta2 = .14, row.prop = 1 / 2, matrix = TRUE)
get.sample.alt <- function(ss) draw.binom(ss, theta1 = .14, theta2 = .08, row.prop = 1 / 2, matrix = TRUE)

get.rejection.rates(get.p.val, NULL, get.sample.null, get.sample.alt, 5, 100, algorithm = "walsh")
}
